{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attribute","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create: function (string) {\r\n        const container = document.createElement\r\n            (\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },//新建节点\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },//想把node2插入到node后面===找到这个节点的父类，调用insertBefore的方法，把node2插入到下一个节点的前面\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },//在前面新增一个节点\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },//新增子类\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },//增加父类\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },//删除一个节点，并返回\r\n    empty(node) {\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    }, //删除一个对象的所有子类，并返回\r\n    attribute(node, name, value) {//重载，根据参数个数写不同代码\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },//用于读写属性\r\n    text(node, string) {//适配\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.text.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText in node') {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },//用于读写文本内容\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },//用于读写HTML的内容\r\n    style(node, name, value) {\r\n        //dom.style(div,'color','red')\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                // dom.style(div,'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                // dom.style(div, {color:'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children)\r\n            .filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};\r\n"]}